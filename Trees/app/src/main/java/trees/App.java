/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Trees.app.src.main.java.trees;

import java.util.ArrayList;

public class App {
    public static void main(String[] args) {
        BinarySearchTree<Integer> b1 = new BinarySearchTree<>();

        b1.add(50);
        b1.add(30);
        b1.add(70);
        b1.add(20);
        b1.add(40);
        b1.add(60);
        b1.add(80);

        System.out.println("Contains 40: " + b1.contains(40)); // true
        System.out.println("Contains 12354: " + b1.contains(12354)); // false

        ArrayList<Integer> preOrderResult = b1.preOrderTraverse(b1.getRoot(), new ArrayList<>());
        System.out.println("Preorder Traversal: " + preOrderResult);

        ArrayList<Integer> inOrderResult = b1.inOrderTraverse(b1.getRoot(), new ArrayList<>());
        System.out.println("Inorder Traversal: " + inOrderResult);

        ArrayList<Integer> postOrderResult = b1.postOrderTraverse(b1.getRoot(), new ArrayList<>());
        System.out.println("Postorder Traversal: " + postOrderResult);

        System.out.println("---");
        System.out.println("MAX Coding challenge");

        int maxValue = b1.findMaximumValue();
        System.out.println("Maximum value in the tree: " + maxValue);
    }
    }

